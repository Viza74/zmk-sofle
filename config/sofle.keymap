#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT
#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  //  600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <0>;      // 0
            time-to-max-speed-ms = <0>;      // 500
            delay-ms = <0>;                   //   10
        };

        tde: tap_dance_e {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp E>, <&kp SEMI>; // e, é
        };

        tdi: tap_dance_i {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp I>, <&kp NUBS>; // i, í
        };

        tdue: tap_dance_ue {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp MINUS>, <&kp BSLH>; // ü, ű
        };

        tdu: tap_dance_u {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp U>, <&kp RIGHT_BRACKET>; // u, ú
        };

        tdoe: tap_dance_oe {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp N0>, <&kp LEFT_BRACKET>; // ö, ő
        };
        tdo: tap_dance_o {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp O>, <&kp EQUAL>; // o, ó
        };

    };

    macros {
        alt_space: alt_space {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp SPACE>
                , <&macro_release &kp LALT>
                ;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <3 2>;
            then-layer = <4>;
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp GRAVE   &kp N1     &kp N2        &kp N3        &kp N4       &kp N5       &kp UP_ARROW     &kp N6     &kp N7     &kp N8         &kp N9           &tdoe            &kp BACKSPACE
&kp ESC     &kp Q      &kp W         &kp E         &kp R        &kp T        &kp DOWN_ARROW   &kp Y      &tdu       &tdi           &tdo             &kp P            &tdue
&kp TAB     &kp A      &kp S         &kp D         &kp F        &kp G        &kp LEFT_ARROW   &kp H      &kp J      &kp K          &kp L            &kp SEMI         &kp APOS
&kp LSHFT   &kp Z      &kp X         &kp C         &kp V        &kp B        &kp RIGHT_ARROW  &kp N      &kp M      &kp COMMA      &kp DOT          &kp FSLH         &kp ENTER
&kp C_MUTE  &kp LCTRL  &kp LEFT_GUI  &kp LEFT_ALT  &kp SPACE    &lt 3 DEL    &kp ENTER        &mo 2      &kp SPACE  &kp RIGHT_ALT  &kp RCTRL        &kp RIGHT_SHIFT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "BASE";
        };

        layer_1 {
            bindings = <
&kp GRAVE   &kp F1          &kp F2          &kp F3          &kp F4          &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8      &kp F9     &kp F10           &kp DEL
&trans      &kp GRAVE       &mkp LCLK       &mkp MCLK       &mkp RCLK       &mkp MB4           &mmv MOVE_DOWN   &kp PG_UP        &kp END          &kp UP      &kp HOME   &kp MINUS         &kp EQUAL
&trans      &kp TILDE       &trans          &trans          &trans          &mkp MB5           &mmv MOVE_LEFT   &kp PG_DN        &kp LEFT         &kp DOWN    &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &trans          &trans          &trans          &trans          &trans             &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT  &kp F11    &kp F12           &trans
&kp C_MUTE  &trans          &trans          &trans          &alt_space      &trans             &mkp LCLK        &trans           &trans           &trans      &trans     &trans
            >;

            display-name = "RAISE";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&kp TILDE  &trans        &trans          &trans        &trans        &trans     &msc SCRL_DOWN   &kp F6  &kp F7     &kp F8        &kp F9     &kp F10      &kp DEL
&trans     &trans        &trans          &trans        &trans        &trans     &msc SCRL_UP     &trans  &kp KP_N7  &kp KP_N8     &kp KP_N9  &trans       &kp F11
&trans     &trans        &trans          &trans        &trans        &trans     &msc SCRL_LEFT   &trans  &kp KP_N4  &kp KP_N5     &kp KP_N6  &trans       &kp F12
&trans     &trans        &trans          &trans        &trans        &trans     &msc SCRL_RIGHT  &trans  &kp KP_N1  &kp KP_N2     &kp KP_N3  &trans       &trans
&trans     &trans        &trans          &trans        &trans        &trans     &mkp LCLK        &trans  &kp KP_N0  &kp KP_COMMA  &trans     &trans
            >;

            display-name = "LOWER";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&kp TILDE   &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8      &kp F9     &kp F10           &kp F11
&trans      &trans           &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4           &mmv MOVE_DOWN   &kp PG_UP        &kp HOME         &kp UP      &kp END    &kp DEL           &kp F12
&trans      &kp LSHFT        &kp LALT        &trans           &kp LCTRL        &mkp MB5           &mmv MOVE_LEFT   &kp PG_DN        &kp LEFT         &kp DOWN    &kp RIGHT  &kp BSPC          &trans
&trans      &kp LC(Y)        &kp LC(X)       &kp LC(C)        &kp LC(V)        &trans             &mmv MOVE_RIGHT  &trans           &trans           &kp INSERT  &trans     &trans            &trans
&trans      &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &trans           &trans           &trans      &trans     &trans
            >;

            display-name = "nav";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_4 {
            bindings = <
&kp TILDE  &bt BT_SEL 0     &bt BT_SEL 1    &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4     &mmv MOVE_UP     &kp F6  &kp F7       &kp F8     &kp F9      &kp F10     &kp F11
&trans     &bt BT_CLR       &bt BT_CLR_ALL  &trans           &trans           &trans           &mmv MOVE_DOWN   &trans  &trans       &trans     &trans      &trans      &kp F12
&trans     &out OUT_USB     &out OUT_BLE    &trans           &trans           &trans           &mmv MOVE_LEFT   &trans  &trans       &trans     &trans      &trans      &trans
&trans     &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &mmv MOVE_RIGHT  &trans  &trans       &trans     &trans      &trans      &trans
&trans     &sys_reset       &trans          &trans           &bootloader      &trans           &mkp LCLK        &trans  &bootloader  &trans     &soft_off   &sys_reset
            >;

            display-name = "ADJUST";
            sensor-bindings = <&scroll_encoder>;
        };
    };
};
